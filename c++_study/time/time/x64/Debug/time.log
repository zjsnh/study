  text.cpp
E:\2023_code\study\c++_study\time\time\text.cpp(29,7): error C2678: 二进制“>”: 没有找到接受“std::basic_ostream<char,std::char_traits<char>>”类型的左操作数的运算符(或没有可接受的转换)
  E:\2023_code\study\c++_study\time\time\text.cpp(29,7):
  可以是“内置 C++ operator>(int，int)”
  	E:\2023_code\study\c++_study\time\time\text.cpp(29,7):
  	“>”: 无法将参数 1 从“std::basic_ostream<char,std::char_traits<char>>”转换为“int”
  C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\memory(3567,30):
  或    “bool std::operator >(std::nullptr_t,const std::unique_ptr<_Ty,_Dx> &)”
  	E:\2023_code\study\c++_study\time\time\text.cpp(29,7):
  	“bool std::operator >(std::nullptr_t,const std::unique_ptr<_Ty,_Dx> &)”: 无法从“int”推导出“const std::unique_ptr<_Ty,_Dx> &”的 模板 参数
  C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\memory(3562,30):
  或    “bool std::operator >(const std::unique_ptr<_Ty,_Dx> &,std::nullptr_t)”
  	E:\2023_code\study\c++_study\time\time\text.cpp(29,7):
  	“bool std::operator >(const std::unique_ptr<_Ty,_Dx> &,std::nullptr_t)”: 无法从“std::basic_ostream<char,std::char_traits<char>>”推导出“const std::unique_ptr<_Ty,_Dx> &”的 模板 参数
  C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\memory(3495,17):
  或    “bool std::operator >(const std::unique_ptr<_Ty,_Dx> &,const std::unique_ptr<_Ty2,_Dx2> &)”
  	E:\2023_code\study\c++_study\time\time\text.cpp(29,7):
  	“bool std::operator >(const std::unique_ptr<_Ty,_Dx> &,const std::unique_ptr<_Ty2,_Dx2> &)”: 无法从“std::basic_ostream<char,std::char_traits<char>>”推导出“const std::unique_ptr<_Ty,_Dx> &”的 模板 参数
  C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\memory(1930,17):
  或    “bool std::operator >(std::nullptr_t,const std::shared_ptr<_Ty> &) noexcept”
  	E:\2023_code\study\c++_study\time\time\text.cpp(29,7):
  	“bool std::operator >(std::nullptr_t,const std::shared_ptr<_Ty> &) noexcept”: 无法从“int”推导出“const std::shared_ptr<_Ty> &”的 模板 参数
  C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\memory(1925,17):
  或    “bool std::operator >(const std::shared_ptr<_Ty> &,std::nullptr_t) noexcept”
  	E:\2023_code\study\c++_study\time\time\text.cpp(29,7):
  	“bool std::operator >(const std::shared_ptr<_Ty> &,std::nullptr_t) noexcept”: 无法从“std::basic_ostream<char,std::char_traits<char>>”推导出“const std::shared_ptr<_Ty> &”的 模板 参数
  C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\memory(1868,17):
  或    “bool std::operator >(const std::shared_ptr<_Ty> &,const std::shared_ptr<_Ty0> &) noexcept”
  	E:\2023_code\study\c++_study\time\time\text.cpp(29,7):
  	“bool std::operator >(const std::shared_ptr<_Ty> &,const std::shared_ptr<_Ty0> &) noexcept”: 无法从“std::basic_ostream<char,std::char_traits<char>>”推导出“const std::shared_ptr<_Ty> &”的 模板 参数
  C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\xstring(5120,17):
  或    “bool std::operator >(const std::basic_string<_Elem,_Traits,_Alloc> &,const _Elem *const ) noexcept”
  	E:\2023_code\study\c++_study\time\time\text.cpp(29,7):
  	“bool std::operator >(const std::basic_string<_Elem,_Traits,_Alloc> &,const _Elem *const ) noexcept”: 无法从“std::basic_ostream<char,std::char_traits<char>>”推导出“const std::basic_string<_Elem,_Traits,_Alloc> &”的 模板 参数
  C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\xstring(5114,17):
  或    “bool std::operator >(const _Elem *const ,const std::basic_string<_Elem,_Traits,_Alloc> &) noexcept”
  	E:\2023_code\study\c++_study\time\time\text.cpp(29,7):
  	“bool std::operator >(const _Elem *const ,const std::basic_string<_Elem,_Traits,_Alloc> &) noexcept”: 无法从“std::basic_ostream<char,std::char_traits<char>>”推导出“const _Elem *const ”的 模板 参数
  C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\xstring(5108,17):
  或    “bool std::operator >(const std::basic_string<_Elem,_Traits,_Alloc> &,const std::basic_string<_Elem,_Traits,_Alloc> &) noexcept”
  	E:\2023_code\study\c++_study\time\time\text.cpp(29,7):
  	“bool std::operator >(const std::basic_string<_Elem,_Traits,_Alloc> &,const std::basic_string<_Elem,_Traits,_Alloc> &) noexcept”: 无法从“std::basic_ostream<char,std::char_traits<char>>”推导出“const std::basic_string<_Elem,_Traits,_Alloc> &”的 模板 参数
  C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\xutility(4265,30):
  或    “bool std::operator >(const std::move_iterator<_Iter> &,const std::move_iterator<_Iter2> &) noexcept(<expr>)”
  	E:\2023_code\study\c++_study\time\time\text.cpp(29,7):
  	“bool std::operator >(const std::move_iterator<_Iter> &,const std::move_iterator<_Iter2> &) noexcept(<expr>)”: 无法从“std::basic_ostream<char,std::char_traits<char>>”推导出“const std::move_iterator<_Iter> &”的 模板 参数
  C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\xutility(1731,5):
  或    “bool std::operator >(const std::reverse_iterator<_BidIt> &,const std::reverse_iterator<_BidIt2> &) noexcept(<expr>)”
  	E:\2023_code\study\c++_study\time\time\text.cpp(29,7):
  	“bool std::operator >(const std::reverse_iterator<_BidIt> &,const std::reverse_iterator<_BidIt2> &) noexcept(<expr>)”: 无法从“std::basic_ostream<char,std::char_traits<char>>”推导出“const std::reverse_iterator<_BidIt> &”的 模板 参数
  C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\utility(518,27):
  或    “bool std::operator >(const std::pair<_Ty1,_Ty2> &,const std::pair<_Uty1,_Uty2> &)”
  	E:\2023_code\study\c++_study\time\time\text.cpp(29,7):
  	“bool std::operator >(const std::pair<_Ty1,_Ty2> &,const std::pair<_Uty1,_Uty2> &)”: 无法从“std::basic_ostream<char,std::char_traits<char>>”推导出“const std::pair<_Ty1,_Ty2> &”的 模板 参数
  E:\2023_code\study\c++_study\time\time\text.cpp(29,7):
  尝试匹配参数列表“(std::basic_ostream<char,std::char_traits<char>>, int)”时
  
